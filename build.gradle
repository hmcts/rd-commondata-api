buildscript {
  dependencies {
    classpath "org.flywaydb:flyway-database-postgresql:11.9.0"
  }
}

plugins {
  id 'application'
  id 'uk.gov.hmcts.java' version '0.12.66'
  id 'pmd'
  id 'idea'
  id 'jacoco'
  id 'project-report'
  id "org.flywaydb.flyway" version '11.8.2'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.springframework.boot' version '3.4.5'
  id 'com.github.ben-manes.versions' version '0.52.0'
  id 'org.sonarqube' version '6.2.0.5505'
  id "info.solidsoft.pitest" version '1.15.0'
  id 'au.com.dius.pact' version '4.6.17'
  id 'org.owasp.dependencycheck' version '12.1.3'
  id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.33'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

ext {
  springCloudVersion = '2024.0.1'
}

def versions = [
  lombok          : '1.18.38',
  sonarPitest     : '0.5',
  jjwt            : '0.12.6',
  junitPitest     : '1.2.1',
  flywaydb        : '11.9.0',
  reformLogging   : '6.1.4',
  pact_version    : '4.6.17',
  log4j           : '2.24.3',
  launchDarklySdk : "5.10.9",
  reformS2sClient : '5.3.2',
  restAssured     : '5.3.1',
  feign           : '3.8.0',
  bytebuddy       : '1.17.5',
  testContainer_postgresql: '1.21.3',
  junit           : '5.11.3',
  junitPlatform   : '1.11.3',
  bouncycastle    : '1.81',
  serenity        : '4.2.31'
]

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  contractTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/contractTest/java')
    }
    resources.srcDir file('src/contractTest/resources')
  }
  pactTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/pactTest/java')
    }
    resources.srcDir file('src/pactTest/resources')
  }
}

tasks.withType(Copy).configureEach {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  finalizedBy aggregate
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
  baselineOnMigrate = true
  if (project.hasProperty("dburl")) {
    url = "jdbc:postgresql://${dburl}"
  }
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
  finalizedBy aggregate
}

project.ext {
  pactVersion = getCheckedOutGitCommitHash()
}

task contract(type: Test) {
  description = 'Runs the consumer Pact tests'
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
  include "uk/gov/hmcts/reform/cdapi/**"

}

task runProviderPactVerification(type: Test) {
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
  if (project.hasProperty('pact.verifier.publishResults')) {
    systemProperty 'pact.verifier.publishResults', project.property('pact.verifier.publishResults')
  }
  systemProperty 'pact.provider.version', project.pactVersion
  include "uk/gov/hmcts/reform/cdapi/provider/**"
}

task fortifyScan(type: JavaExec)  {
  main('uk.gov.hmcts.fortifyclient.FortifyClientMainApp')
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
  ignoreExitValue = true as JavaExecSpec
}

runProviderPactVerification.dependsOn contract

runProviderPactVerification.finalizedBy pactVerify

def getCheckedOutGitCommitHash() {
  'git rev-parse --verify --short HEAD'.execute().text.trim()
}

pact {
  publish {
    pactDirectory = 'pacts'
    pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
    tags = [System.getenv("PACT_BRANCH_NAME") ?:'Dev']
    version = project.pactVersion
  }
}

pmd {
  toolVersion = "7.14.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = [
    'category/java/errorprone.xml',
    'category/java/bestpractices.xml'
  ]
}

jacoco {
  toolVersion = "0.8.13"
}
jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.00
      }
    }
  }
}

jacocoTestReport {
  executionData(test)
  reports {
    xml.required = true
    csv.required = false
    xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

pitest {
  junit5PluginVersion = versions.junitPitest
  targetClasses = ['uk.gov.hmcts.reform.cdapi.*']
  excludedClasses = [
    'uk.gov.hmcts.reform.cdapi.config.*',
    'uk.gov.hmcts.reform.cdapi.domain.*'
  ]
  threads = 10
  enableDefaultIncrementalAnalysis = true
  historyInputLocation = 'build/reports/pitest/fastermutationtesting'
  historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
  outputFormats = ['XML', 'HTML']
  timestampedReports = false
  mutationThreshold = 75
  useClasspathFile = true
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport

sonarqube {
  properties {
    property "sonar.projectName", "RD :: Common Data API"
    property "sonar.projectKey", "RDCOMMONDATAAPI"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.outputLocation}"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/cdapi/config/**," +
      "src/main/java/uk/gov/hmcts/reform/cdapi/CommonDataApplication.java," +
      "src/main/java/uk/gov/hmcts/reform/cdapi/domain/**"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

configurations {
  testCompile.exclude group: 'ch.qos.logback', module: 'logback-classic'
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1' }
}

dependencies {

  configurations.all {
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
  }

  testImplementation 'com.github.hmcts:rd-commons-lib:0.1.2'
  testImplementation group: 'org.springframework', name: 'spring-test'

  implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.1'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  implementation group: 'com.fasterxml.jackson', name:'jackson-bom' , version:'2.19.1'

  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.log4j
  implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: versions.log4j
  implementation group: 'org.apache.logging.log4j', name: 'log4j', version: versions.log4j
  implementation group: 'ch.qos.logback', name: 'logback-core', version: versions.logback
  implementation group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
  implementation group: 'com.microsoft.azure', name: 'applicationinsights-core', version: '3.7.3'

  implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.7'
  implementation group: 'org.flywaydb', name: 'flyway-core', version: versions.flywaydb
  implementation group: 'org.flywaydb', name: 'flyway-database-postgresql', version: versions.flywaydb
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
  implementation group: 'org.yaml', name: 'snakeyaml', version: '2.4'

  implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '3.0.0'

  implementation group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: versions.bouncycastle
  implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '5.10.9'
  implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.reformS2sClient
  implementation group: 'com.auth0', name: 'java-jwt', version: '4.5.0'
  implementation group: 'jakarta.inject', name: 'jakarta.inject-api', version: '2.0.1'
  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: '6.1.9'
  implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '3.0.4'
  implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.2.1'
  implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version:  versions.jjwt
  implementation 'commons-io:commons-io:2.19.0'
  implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: '2.19.1', ext: 'pom'
  implementation group: 'io.github.openfeign.form', name: 'feign-form', version: versions.feign
  implementation group: 'io.github.openfeign.form', name: 'feign-form-spring', version: versions.feign

  implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.9'

  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
  implementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0'

  runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: versions.jjwt
  runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: versions.jjwt

  testImplementation group: 'org.springframework.security', name: 'spring-security-test'
  testImplementation group: 'org.testcontainers', name: 'postgresql', version: versions.testContainer_postgresql
  testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: versions.testContainer_postgresql
  testImplementation group: 'org.testcontainers', name: 'testcontainers', version: versions.testContainer_postgresql

  testImplementation(platform('org.junit:junit-bom:5.11.3'))
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }

  testImplementation("com.github.tomakehurst:wiremock-jre8-standalone:3.0.1")

  testImplementation ("org.mockito:mockito-core:5.16.1") {
    exclude group: "net.bytebuddy", module: "byte-buddy"
    exclude group: "net.bytebuddy", module: "byte-buddy-agent"
  }
  testImplementation ("org.mockito:mockito-inline:5.2.0") {
    exclude group: "net.bytebuddy", module: "byte-buddy"
    exclude group: "net.bytebuddy", module: "byte-buddy-agent"
  }
  testImplementation group: 'net.bytebuddy', name: 'byte-buddy', version: versions.bytebuddy
  testImplementation group: 'net.bytebuddy', name: 'byte-buddy-agent', version: versions.bytebuddy
  testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.27.3'
  testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.16.1'
  testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
  testImplementation group: 'com.github.mifmif', name: 'generex', version: '1.0.2'
  testImplementation 'com.github.hmcts:fortify-client:1.4.9:all'
  testImplementation 'io.github.openfeign:feign-jackson:13.5'
  testImplementation group: 'org.codehaus.sonar-plugins', name: 'sonar-pitest-plugin', version: versions.sonarPitest

  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: versions.junit
  testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity

  functionalTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  functionalTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
  functionalTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  functionalTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
  functionalTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform

  smokeTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  smokeTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
  smokeTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  smokeTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
  smokeTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform

  integrationTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  integrationTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
  integrationTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  integrationTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
  integrationTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform

  contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
  contractTestRuntimeOnly group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version

  contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

  contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
  contractTestImplementation(group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version) {
    exclude group: 'org.springframework', module: 'spring-test'
  }
  contractTestImplementation(group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version) {
    exclude group: 'org.springframework', module: 'spring-test'
  }
  contractTestImplementation group: 'org.springframework', name: 'spring-test'

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

  smokeTestImplementation sourceSets.main.runtimeClasspath
  smokeTestImplementation sourceSets.test.runtimeClasspath

  contractTestImplementation sourceSets.main.runtimeClasspath
  contractTestImplementation sourceSets.test.runtimeClasspath

  pactTestImplementation sourceSets.main.runtimeClasspath
  pactTestImplementation sourceSets.test.runtimeClasspath

  compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  integrationTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
}

application {
  mainClass = 'uk.gov.hmcts.reform.cdapi.CommonDataApplication'
}

bootJar {
  archiveFileName = "rd-commondata-api.jar"

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

dependencies {
  modules {
    module("org.bouncycastle:bcpkix-jdk15on") {
      replacedBy("org.bouncycastle:bcpkix-jdk18on")
    }
  }
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}
